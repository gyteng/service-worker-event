(()=>{console.log("service worker start.");const e=new Map,t=(e,t)=>{self.clients.get(e.id).then((function(e){e.postMessage(t)}))};self.addEventListener("message",(o=>{console.log("receive message from worker:",o.source.id,o.data);const s=o.source,{type:a,eventName:n,data:c}=o.data;if("on"!==a&&"once"!==a||(e.has(s)||(t=>{const o=t.source;e.set(o,new Set)})(o),e.get(s).add(n),console.log("clientEventMap",e)),"emit"===a)for(const[o,r]of e)r.has(n)&&s!==o&&t(o,{type:a,eventName:n,data:c});if("remove"===a){const t=e.get(s);t&&t.delete(n)}if("removeAll"===a)for(const[o,s]of e)s.has(n)&&(t(o,{type:a,eventName:n,data:c}),s&&s.delete(n))}))})();