(()=>{const e=new Map,t=(t,s)=>{self.clients.get(t.id).then((o=>{o?(s.from="service worker event",o.postMessage(s)):e.delete(t)}))};self.addEventListener("message",(s=>{const o=s.source,{from:n,type:a,eventName:r,data:c}=s.data;if("service worker event"===n){if("unregister"===a&&(t=>{const s=t.source;e.delete(s)})(s),("on"===a||"once"===a)&&(e.has(o)||(t=>{const s=t.source;e.set(s,new Set)})(s),e.get(o).add(r)),"emit"===a)for(const[s,n]of e)n.has(r)&&o!==s&&t(s,{type:a,eventName:r,data:c});if("remove"===a){const t=e.get(o);t&&t.delete(r)}if("removeAll"===a)for(const[s,o]of e)o.has(r)&&(t(s,{type:a,eventName:r,data:c}),o&&o.delete(r))}}))})();